provider "aws" {
  region = "us-west-2"
}

//Creating a Redshift Subnet group
resource "aws_redshift_subnet_group" "default" {
  name       = "main"
  subnet_ids = [aws_subnet.main.id]

  tags = {
    Name = "main"
  }
}

//Redshift Cluster
resource "aws_redshift_cluster" "default" {
  cluster_identifier = "tf-redshift-cluster"
  database_name      = "mydb"
  master_username    = "foo"
  master_password    = "Mustbe8characters"
  node_type          = "dc1.large"
  cluster_type       = "single-node"
  subnet_group_name  = aws_redshift_subnet_group.default.name

  skip_final_snapshot = true
}

// Creating an IAM role for Glue
resource "aws_iam_role" "aws_glue_service_role" {
  name = "AWSGlueServiceRoleDefault"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "sts:AssumeRole",
      "Principal": {
        "Service": "glue.amazonaws.com"
      },
      "Effect": "Allow",
      "Sid": ""
    }
  ]
}
EOF
}

// Assigning the necessary policy for Glue
resource "aws_iam_role_policy_attachment" "aws_glue_service_role" {
  role       = aws_iam_role.aws_glue_service_role.name
  policy_arn = "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
}

// Glue catalog database where Glue would manage table metadata
resource "aws_glue_catalog_database" "database" {
  name = "test"
}

// Glue catalog table where Glue would track data
resource "aws_glue_catalog_table" "table" {
  name          = "test"
  database_name = aws_glue_catalog_database.database.name

  table_type = "EXTERNAL_TABLE"

  parameters = {
    "EXTERNAL" = "TRUE"
  }

  storage_descriptor {
    location      = "s3://my-bucket/prefix/"
    input_format  = "org.apache.hadoop.mapred.TextInputFormat"
    output_format = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

    ser_de_info {
      name = "test"
      parameters = {
        "serialization.format" = "1"
      }

      serialization_library = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
    }

    columns {
      name = "test"
      type = "int"
    }
  }

  partition_keys {
    name = "year"
    type = "int"
  }
}

